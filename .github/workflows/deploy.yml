name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SERVER: mail.fleetmap.org

    steps:
      - uses: actions/checkout@v4

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H $SERVER  >> ~/.ssh/known_hosts
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/id_rsa
      - name: Deploy
        run: |
          cat << 'SCRIPT' > deploy_script.sh
          #!/bin/bash
          sudo apt install unzip -y
          export ADMIN_PASSWD="${{ vars.ADMIN_PASSWD }}"
          export GITHUB_REPOSITORY="${{ github.repository }}"
          export PROJECT_DIR="${GITHUB_REPOSITORY##*/}"
          export MAIL_SMTP_FROM="${{vars.MAIL_SMTP_FROM}}"
          export OPEN_ID_SECRET="${{vars.OPEN_ID_SECRET}}"
          export OPEN_ID_CLIENT="${{vars.OPEN_ID_CLIENT}}"
          export AUTH_DOMAIN="${{vars.AUTH_DOMAIN}}"
          export DOVE_ADM_PASSWORD="${{vars.DOVE_ADM_PASSWORD}}"
          export USER_PASSWORD="${{vars.DOVE_ADM_PASSWORD}}"
          export ROUNDCUBEMAIL_SMTP_SERVER="${{vars.ROUNDCUBEMAIL_SMTP_SERVER}}"
          export SMTP_USER="${{vars.SMTP_USER}}"
          export SMTP_PASS="${{vars.SMTP_PASS}}"

          set -e  # Exit on errors
          echo "PROJECT_DIR=$PROJECT_DIR"
          echo "GITHUB_REPOSITORY=$GITHUB_REPOSITORY"
          echo "ADMIN_PASSWD=$ADMIN_PASSWD"
          echo "SMTP_PASS=$SMTP_PASS"
          echo "DOVE_ADM_PASSWORD=$DOVE_ADM_PASSWORD"
          echo "USER_PASSWORD=$USER_PASSWORD"
          # Check if the directory exists
          if [ ! -d "$PROJECT_DIR" ]; then
            echo "Directory does not exist. Cloning the repository..."
            mkdir -p "$PROJECT_DIR"
            git clone "https://github.com/$GITHUB_REPOSITORY".git "$PROJECT_DIR"
          fi

          echo "Navigate to the project directory"
          cd "$PROJECT_DIR"

          echo "Ensure the repository is clean"
          git reset --hard
          git clean -fd
          git fetch origin main
          git reset --hard origin/main

         
          echo "running sed"
          sed -i "s/%%smtp_user%%/$SMTP_USER/g" roundcube/config.php    
          sed -i "s/%%smtp_pass%%/$SMTP_PASS/g" roundcube/config.php    
          sed -i "s/%%client_id%%/$OPEN_ID_CLIENT/g" roundcube/config.php    
          sed -i "s/%%oidc_secret%%/$OPEN_ID_SECRET/g" roundcube/config.php              
          sed -i "s/%%master_password%%/$DOVE_ADM_PASSWORD/g" roundcube/config.php       
          sed -i "s/%%doveadm_password%%/$DOVE_ADM_PASSWORD/g" dovecot/conf.d/dovecot.conf   
          
          echo "restart"
          ./run.sh

          SCRIPT
          chmod +x deploy_script.sh
          
          ssh root@$SERVER 'bash -s' < deploy_script.sh
